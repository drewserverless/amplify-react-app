{"ast":null,"code":"var _jsxFileName = \"/home/drew/MATC/amplify-react-app/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\n// Import useState and useEffect hooks from React\nimport React, { useState, useEffect } from 'react';\n\n// Import the API category from AWS Amplify\nimport { API } from 'aws-amplify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n\n  // Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({\n    limit: 5,\n    start: 0\n  });\n\n  // Create a new variable for loading\n  const [loading, updateLoading] = useState(true);\n\n  // Create a new function to allow users to update the input values\n  function updateInputValues(type, value) {\n    updateInput({\n      ...input,\n      [type]: value\n    });\n  }\n  ;\n\n  // Define function to all API\n  const fetchCoins = async () => {\n    const {\n      limit,\n      start\n    } = input;\n    const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n    updateCoins(data.coins);\n  };\n\n  // Call fetchCoins function when component loads\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"start\",\n      onChange: e => updateInputValues('start', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => updateInputValues('limit', e.target.value),\n      placeholder: \"limit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCoins,\n      children: \"Fetch Coins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), coins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [coin.name, \" - \", coin.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"$\", coin.price_usd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LhLCzqY/Jam9KfjTV9fCF/PZLOU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","API","jsxDEV","_jsxDEV","App","_s","coins","updateCoins","input","updateInput","limit","start","loading","updateLoading","updateInputValues","type","value","fetchCoins","data","get","className","children","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","coin","index","name","symbol","price_usd","_c","$RefreshReg$"],"sources":["/home/drew/MATC/amplify-react-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// Import useState and useEffect hooks from React\nimport React, { useState, useEffect } from 'react';\n\n// Import the API category from AWS Amplify\nimport { API } from 'aws-amplify';\n\nconst App = () => {\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n\n  // Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 });\n\n  // Create a new variable for loading\n  const [loading, updateLoading] = useState(true); \n\n  // Create a new function to allow users to update the input values\n  function updateInputValues(type, value) {\n    updateInput({ ...input, [type]: value })\n  };\n\n  // Define function to all API\n  const fetchCoins = async() => {\n    const { limit, start } = input;\n    const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n    updateCoins(data.coins)\n  }\n\n\n  // Call fetchCoins function when component loads\n  useEffect(() => {\n    fetchCoins()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {/* Add input fields to the UI for user input */}\n      <input\n        placeholder=\"start\"\n        onChange={e => updateInputValues('start', e.target.value)}\n      />\n      <input\n        onChange={e => updateInputValues('limit', e.target.value)}\n        placeholder=\"limit\"\n      />\n\n    {/*Add button to the UI to give user the option to call the API */}\n    <button onClick={fetchCoins}>Fetch Coins</button>\n    {loading && <h2>Loading...</h2>}\n          {\n            coins.map((coin, index) => (\n              <div key={index}>\n                <h2>{coin.name} - {coin.symbol}</h2>\n                <h5>${coin.price_usd}</h5>\n              </div>\n            ))\n          }\n    </div>\n  );\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}