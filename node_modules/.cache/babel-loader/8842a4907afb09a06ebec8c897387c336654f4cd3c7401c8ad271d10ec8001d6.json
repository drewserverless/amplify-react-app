{"ast":null,"code":"import _regeneratorRuntime from\"/home/drew/MATC/amplify-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/drew/MATC/amplify-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/home/drew/MATC/amplify-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/drew/MATC/amplify-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/drew/MATC/amplify-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import logo from './logo.svg';\nimport'./App.css';// Import useState and useEffect hooks from React\nimport React,{useState,useEffect}from'react';// Import the API category from AWS Amplify\nimport{API}from'aws-amplify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){// Create coins variable and set to empty array\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),coins=_useState2[0],updateCoins=_useState2[1];// Create additional state to hold user input for limit and start properties\nvar _useState3=useState({limit:5,start:0}),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],updateInput=_useState4[1];// Create a new variable for loading\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],updateLoading=_useState6[1];// Create a new function to allow users to update the input values\nvar updateInputValues=function updateInputValues(type,value){updateInput(_objectSpread(_objectSpread({},input),{},_defineProperty({},type,value)));};// Define function to all API\nvar fetchCoins=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var limit,start,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:updateLoading(true);limit=input.limit,start=input.start;_context.next=4;return API.get('cryptoapi',\"/coins?limit=\".concat(limit,\"&start=\").concat(start));case 4:data=_context.sent;updateCoins(data.coins);updateLoading(false);case 7:case\"end\":return _context.stop();}},_callee);}));return function fetchCoins(){return _ref.apply(this,arguments);};}();// Call fetchCoins function when component loads\nuseEffect(function(){fetchCoins();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"start\",onChange:function onChange(e){return updateInputValues('start',e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return updateInputValues('limit',e.target.value);},placeholder:\"limit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchCoins,children:\"Fetch Coins\"}),loading&&/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...\"}),!loading&&coins.map(function(coin,index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[coin.name,\" - \",coin.symbol]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"$\",coin.price_usd]})]},index);})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","API","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","coins","updateCoins","_useState3","limit","start","_useState4","input","updateInput","_useState5","_useState6","loading","updateLoading","updateInputValues","type","value","_objectSpread","_defineProperty","fetchCoins","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","get","concat","sent","stop","apply","arguments","className","children","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd"],"sources":["/home/drew/MATC/amplify-react-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// Import useState and useEffect hooks from React\nimport React, { useState, useEffect } from 'react';\n\n// Import the API category from AWS Amplify\nimport { API } from 'aws-amplify';\n\nconst App = () => {\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n\n  // Create additional state to hold user input for limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 });\n\n  // Create a new variable for loading\n  const [loading, updateLoading] = useState(true); \n\n  // Create a new function to allow users to update the input values\n  const updateInputValues = (type, value) =>  {\n    updateInput({ ...input, [type]: value })\n  };\n\n  // Define function to all API\n  const fetchCoins = async() => {\n    updateLoading(true);\n    const { limit, start } = input;\n    const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n    updateCoins(data.coins);\n    updateLoading(false);\n  }\n\n\n  // Call fetchCoins function when component loads\n  useEffect(() => {\n    fetchCoins()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {/* Add input fields to the UI for user input */}\n      <input\n        placeholder=\"start\"\n        onChange={e => updateInputValues('start', e.target.value)}\n      />\n      <input\n        onChange={e => updateInputValues('limit', e.target.value)}\n        placeholder=\"limit\"\n      />\n\n    {/*Add button to the UI to give user the option to call the API */}\n    <button onClick={fetchCoins}>Fetch Coins</button>\n    {loading && <h2>Loading...</h2>}\n          {\n            !loading && coins.map((coin, index) => (\n              <div key={index}>\n                <h2>{coin.name} - {coin.symbol}</h2>\n                <h5>${coin.price_usd}</h5>\n              </div>\n            ))\n          }\n    </div>\n  );\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}